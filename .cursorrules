# Instructions

During your interaction with the user, if you find anything reusable in this project (e.g. version of a library, model name), especially about a fix to a mistake you made or a correction you received, you should take note in the `Lessons` section in the `.cursorrules` file (if you cannot file, create it) so you will not make the same mistake again.

You should also use the `.cursorrules` file as a Scratchpad to organize your thoughts. Especially when you receive a new task, you should first review the content of the Scratchpad, clear old different task if necessary, first explain the task, and plan the steps you need to take to complete the task. You can use todo markers to indicate the progress, e.g.
[X] Task 1
[ ] Task 2

Also update the progress of the task in the Scratchpad when you finish a subtask.
Especially when you finished a milestone, it will help to improve your depth of task accomplishment to use the Scratchpad to reflect and plan.
The goal is to help you maintain a big picture as well as the progress of the task. Always refer to the Scratchpad when you plan the next step.

# Lessons

## User Specified Lessons

- You have a python venv in ./venv. Use it.
- Include info useful for debugging in the program output.
- Read the file before you try to edit it.
- Due to Cursor's limit, when you use `git` and `gh` and need to submit a multiline commit message, first write the message in a file, and then use `git commit -F <filename>` or similar command to commit. And then remove the file. Include "[Cursor] " in the commit message and PR title.

## Cursor learned

- Always use MCP (Browser Tools Server) when handling UI-related tasks, such as cloning target websites, debugging UI issues, or testing interfaces.
Specifically leverage Browser Tools Server capabilities, including:
 - Capturing console logs for debugging JavaScript errors and warnings.
 - Monitoring network requests to identify latency issues, API failures, or incorrect data handling.
 - Taking precise screenshots for visual verification and documentation purposes.
 - Tracking element selections to pinpoint exact DOM elements for CSS and interaction troubleshooting.
 - Utilizing WebSocket real-time communication for dynamic UI debugging and live interaction tracking.
 - Configuring log limits and settings to efficiently manage debugging information and avoid overload.
 - Performing comprehensive audits using Lighthouse to evaluate accessibility, performance, SEO, and best practices, ensuring optimized user experiences.

- For search results, ensure proper handling of different character encodings (UTF-8) for international queries
- Add debug information to stderr while keeping the main output clean in stdout for better pipeline integration
- Use 'gpt-4o' as the model name for OpenAI's GPT-4 with vision capabilities
- When optimizing codebases, always check for unused files by examining imports and route configurations
- Fix dependency conflicts in requirements.txt by using compatible version ranges (>=) instead of exact versions (==)
- Frontend API services should use real endpoints, not mock data, for production-ready applications

# Scratchpad

## üöÄ GITHUB REPOSITORY UPLOAD COMPLETE!

### Task Overview:
‚úÖ **COMPLETED:** Successfully uploaded the ICT Welcome Freshy 2025 Mobile Event Dashboard to GitHub repository: `https://github.com/ChokunKiMINoTo/welcome-freshy-2025.git`

### What Was Accomplished:
- ‚úÖ **Repository Setup**: Connected local Git repository to GitHub remote
- ‚úÖ **Merge Conflict Resolution**: Resolved README.md conflict between local Next.js docs and GitHub repo
- ‚úÖ **File Cleanup**: Removed temporary commit message file
- ‚úÖ **Successful Push**: All project files uploaded to GitHub main branch
- ‚úÖ **History Preservation**: Maintained all commit history and project structure

### Technical Steps Completed:
- ‚úÖ **Remote Configuration**: `git remote add origin https://github.com/ChokunKiMINoTo/welcome-freshy-2025.git`
- ‚úÖ **Conflict Resolution**: Combined repository title with Next.js documentation in README.md
- ‚úÖ **Merge Completion**: Successfully merged unrelated histories from GitHub
- ‚úÖ **Final Push**: `git push origin main` - 66 objects uploaded successfully

### Repository Structure Uploaded:
- ‚úÖ **Complete Next.js Project**: All source code, components, and utilities
- ‚úÖ **Event Dashboard Features**: LiveSchedule, VenueMap, TeamResponsibilities, etc.
- ‚úÖ **Event Timer System**: ‚è±Ô∏è TIME REMAINING implementation
- ‚úÖ **CSV Data Management**: Venue status persistence and data loading
- ‚úÖ **Configuration Files**: package.json, tsconfig.json, tailwind.config.ts
- ‚úÖ **Documentation**: Updated README.md with proper project title

### GitHub Repository Status:
- ‚úÖ **URL**: https://github.com/ChokunKiMINoTo/welcome-freshy-2025
- ‚úÖ **Branch**: main
- ‚úÖ **Total Files**: 66 objects uploaded (126.81 KiB)
- ‚úÖ **Status**: Live and accessible
- ‚úÖ **Documentation**: README.md with Next.js setup instructions

### Progress:
[X] Local repository status check
[X] GitHub remote configuration
[X] Fetch remote changes
[X] Merge conflict resolution in README.md
[X] File staging and commits
[X] Successful push to GitHub
[X] Repository verification

## üéâ PROJECT NOW LIVE ON GITHUB!

The **ICT Welcome Freshy 2025 Mobile Event Dashboard** is now successfully hosted on GitHub with:

‚úÖ **Complete Source Code** - All React components, utilities, and configurations
‚úÖ **Event Management Features** - Real-time scheduling, venue status, team coordination
‚úÖ **Timer Functionality** - ‚è±Ô∏è TIME REMAINING display for current events
‚úÖ **CSV Data System** - Persistent venue status updates and data management
‚úÖ **Modern Tech Stack** - Next.js 14, TypeScript, Material-UI, CSV processing
‚úÖ **Professional Documentation** - Updated README with project description and setup
‚úÖ **Version Control** - Full Git history and collaboration-ready structure

**Repository Ready for Development and Deployment!** üöÄ

## ‚úÖ MAIN CONTACT SECTION ENHANCEMENT COMPLETE!

### Task Overview:
‚úÖ **COMPLETED:** Added "Main Contact" section above team cards with same UI as emergency contacts, displaying 3 Head Organizers

### What Was Implemented:
- ‚úÖ **Main Contact Section**: Added prominently above search bar and team cards
- ‚úÖ **Emergency Contact UI Style**: Used identical card design with primary blue borders
- ‚úÖ **3 Head Organizers**: Event Director, Academic Coordinator, and Operations Manager
- ‚úÖ **Consistent Styling**: Same hover effects, avatars, and typography as emergency contacts
- ‚úÖ **Info Alert**: Explains these are primary organizers and decision makers
- ‚úÖ **Admin Icon**: Used AdminPanelSettings icon for authority indication
- ‚úÖ **Phone Formatting**: Applied XXX XXX XXX format for consistency
- ‚úÖ **Responsive Design**: Works across mobile, tablet, and desktop screens

### Head Organizers Added:
- ‚úÖ **Dr. Siriporn Tangsiri** - Event Director (081 234 5601)
- ‚úÖ **Assoc. Prof. Weerasak Chen** - Academic Coordinator (081 234 5602)  
- ‚úÖ **Mr. Thanakorn Srisawat** - Operations Manager (081 234 5603)

### UI Design Features:
- ‚úÖ **Border Styling**: 2px solid primary blue border
- ‚úÖ **Card Layout**: Same structure as emergency contacts in ContactDirectory
- ‚úÖ **Hover Effects**: Scale transformation (1.02x) on hover
- ‚úÖ **Avatar System**: Initials display with primary background color
- ‚úÖ **Typography Hierarchy**: Name (subtitle1), role (body2), phone (body2 primary color)
- ‚úÖ **Icon Integration**: AdminPanelSettings icon for visual authority indication

### Technical Implementation:
- ‚úÖ **Interface Definition**: Created MainContact interface for type safety
- ‚úÖ **Data Structure**: Array of 3 main contacts with id, name, role, phone, email
- ‚úÖ **Component Integration**: Seamlessly integrated above existing search and team sections
- ‚úÖ **Material-UI Components**: Used Card, Grid, Stack, Avatar, Alert, IconButton
- ‚úÖ **Responsive Grid**: xs=12, sm=6, md=4 for optimal display across devices

### Progress:
[X] Main Contact section design and implementation
[X] Head Organizer data creation
[X] UI consistency with emergency contacts
[X] Responsive layout implementation
[X] Icon and styling integration
[X] Phone number formatting
[X] Component testing and verification

## üéâ ENHANCEMENT COMPLETE!

The **ICT Welcome Freshy 2025 Mobile Event Dashboard** now features:

‚úÖ **Main Contact Section** - Prominent display of 3 Head Organizers above team cards
‚úÖ **Consistent UI Design** - Same styling as emergency contacts for visual hierarchy
‚úÖ **Enhanced Authority Display** - Clear identification of primary decision makers
‚úÖ **Quick Access** - Easy contact information for event leadership
‚úÖ **Professional Layout** - Clean, organized, and mobile-responsive design
‚úÖ **Complete TeamResponsibilities** - Enhanced with main contacts, team cards, and detailed dialogs

**Perfect organizational structure for event coordination with clear authority hierarchy!** üöÄ

## üé® UI CLEANUP: Clean White/Black Theme with Original Colorful Content

### Task Overview:
‚úÖ **COMPLETED:** Remove gradient backgrounds and implement clean white/black theme while maintaining original colorful content design

### What Was Maintained (Original Design):
- ‚úÖ **LiveSchedule**: Colorful activity cards from CSV data (`item.color`) - This is the original design!
- ‚úÖ **VenueMap**: Colorful venue cards from CSV data (`venue.color`) - This is the original design!
- ‚úÖ **Activity-specific colors**: All content colors from CSV data maintained

### What Was Cleaned Up:
- ‚úÖ **Scoreboard**: Removed gradient from top 3 podium ‚Üí Clean white card with border
- ‚úÖ **PropTracker**: Removed gradient from category overview ‚Üí Clean white card with border (**HIDDEN from navigation**)
- ‚úÖ **TeamResponsibilities**: **üÜï BEAUTIFUL REDESIGN COMPLETE!** 
  - ‚úÖ Simplified clean cards showing team name, lead name, and contact info
  - ‚úÖ Removed status/priority chips and detailed accordions for cleaner design
  - ‚úÖ Click-to-view dialog system for team responsibilities and member details
  - ‚úÖ Enhanced with generated team members, roles, and contact info
  - ‚úÖ Clean white theme with colorful team indicators (color dots instead of backgrounds)
  - ‚úÖ Professional layout with hover effects and responsive design
  - ‚úÖ CSV data integration with intelligently generated team structure
  - ‚úÖ **NEW:** Removed Team Members section, enhanced Team Lead with multi-person support
  - ‚úÖ **NEW:** Clickable phone numbers with tel: links for direct calling
  - ‚úÖ **NEW:** Phone number formatting in XXX XXX XXX pattern for better readability
  - ‚úÖ **NEW:** Main Contact section above team cards with 3 Head Organizers
- ‚úÖ **Main Dashboard**: Already had clean white/black theme with dark mode toggle
- ‚úÖ **Global CSS**: Removed gradient background from body element ‚Üí Pure white/black background
- ‚úÖ **Bottom Navigation**: Fixed positioning to stick to bottom of screen

### Current Status:
[X] ‚úÖ Main dashboard theme - Clean white/black with dark mode support
[X] ‚úÖ Scoreboard component - Removed gradients, clean cards
[X] ‚úÖ PropTracker component - Removed gradients, clean cards  
[X] ‚úÖ TeamResponsibilities component - **BEAUTIFUL NEW DESIGN!** Clean theme + enhanced functionality + Main Contact section
[X] ‚úÖ LiveSchedule component - Original colorful design maintained (activity cards)
[X] ‚úÖ VenueMap component - Original colorful design maintained (venue cards)
[X] ‚úÖ Global CSS cleanup - Removed body gradient, pure theme control
[X] ‚úÖ Bottom navigation fix - Fixed to bottom of screen with proper padding
[X] ‚úÖ All other components - Clean theme verified

### üéØ **UI Design Philosophy Achieved:**
- **Clean Infrastructure**: Pure white/black backgrounds, no gradients on UI elements
- **Colorful Content**: Activity cards, venue cards retain CSV-defined colors
- **Professional Look**: Borders instead of gradients for emphasis
- **Dark Mode Support**: Full light/dark theme toggle functionality
- **Material-UI Theming**: Complete theme control via Material-UI system
- **Fixed Navigation**: Bottom navigation stays visible while scrolling
- **Enhanced UX**: Beautiful card layouts, search functionality, expandable details
- **Authority Structure**: Clear Main Contact section for organizational hierarchy

### Progress:
[X] Project analysis completed
[X] Gradient removal from UI elements  
[X] Clean white/black theme implementation
[X] Original colorful content design preserved
[X] All components updated and verified
[X] Global CSS cleanup completed
[X] Bottom navigation positioning fixed
[X] TeamResponsibilities enhanced with beautiful new design
[X] Main Contact section added with Head Organizers

## üéâ UI CLEANUP COMPLETE!

The **ICT Welcome Freshy 2025 Mobile Event Dashboard** now has:

‚úÖ **Clean Professional Theme** - Pure white/black backgrounds with no gradients
‚úÖ **Original Colorful Content** - Activity and venue cards retain their vibrant CSV colors  
‚úÖ **Beautiful Team Management** - Enhanced TeamResponsibilities with modern card design + Main Contact section
‚úÖ **Organizational Hierarchy** - Clear display of 3 Head Organizers above team structure
‚úÖ **Dark Mode Support** - Full light/dark theme toggle in header
‚úÖ **Consistent Design** - All components follow the same clean aesthetic
‚úÖ **Enhanced Readability** - Better contrast and typography throughout
‚úÖ **Material-UI Control** - Complete theming handled by Material-UI system
‚úÖ **Fixed Bottom Navigation** - Navigation pane stays at bottom of screen while scrolling
‚úÖ **Professional UX** - Modern layouts, search, status indicators, and expandable content

**Perfect balance of clean professional UI with vibrant, engaging content and clear authority structure!** üé®

## üîÑ REFRESH BUTTON IMPLEMENTATION COMPLETE!

### Task Overview:
‚úÖ **COMPLETED:** Added refresh button functionality to reload data across all components

### What Was Implemented:
- ‚úÖ **RefreshContext**: Created React Context to manage refresh state globally
- ‚úÖ **Refresh Button**: Added spinning refresh icon in AppBar with click animation
- ‚úÖ **Global State**: Centralized refresh trigger management with useState
- ‚úÖ **Component Integration**: All 6 components now respond to refresh events

### Updated Components:
- ‚úÖ **LiveSchedule**: Uses refresh context to reload schedule data
- ‚úÖ **VenueMap**: Uses refresh context to reload venue data  
- ‚úÖ **TeamResponsibilities**: Uses refresh context to reload team data
- ‚úÖ **Scoreboard**: Uses refresh context to reload scoreboard data
- ‚úÖ **ContactDirectory**: Uses refresh context to reload contact data
- ‚úÖ **PropTracker**: Uses refresh context to reload prop data

### Technical Implementation:
- ‚úÖ **React Context**: `RefreshContext` provides global refresh state
- ‚úÖ **useRefresh Hook**: Custom hook for easy component integration
- ‚úÖ **Animation**: Refresh button spins during data reload
- ‚úÖ **Error Handling**: All components handle refresh errors gracefully
- ‚úÖ **Loading States**: Components show loading during refresh

### User Experience:
- ‚úÖ **Single Button**: One refresh button reloads all dashboard data
- ‚úÖ **Visual Feedback**: Spinning animation indicates refresh in progress
- ‚úÖ **Instant Response**: Button responds immediately to user clicks
- ‚úÖ **Component Coordination**: All components refresh simultaneously

### Progress:
[X] RefreshContext creation
[X] Refresh button implementation
[X] LiveSchedule integration
[X] VenueMap integration  
[X] TeamResponsibilities integration
[X] Scoreboard integration
[X] ContactDirectory integration
[X] PropTracker integration

## üéâ DASHBOARD ENHANCEMENT COMPLETE!

The **ICT Welcome Freshy 2025 Mobile Event Dashboard** now has:

‚úÖ **Global Refresh Capability** - Single button refreshes all data
‚úÖ **Clean Professional Theme** - Pure white/black backgrounds with no gradients
‚úÖ **Enhanced TeamResponsibilities** - Beautiful card design with dialog details + Main Contact section
‚úÖ **Organizational Hierarchy** - 3 Head Organizers displayed prominently above team cards
‚úÖ **Formatted Phone Numbers** - XXX XXX XXX format with tel: links
‚úÖ **Removed Team Members Section** - Simplified team lead information
‚úÖ **Fixed Bottom Navigation** - Stays at bottom during scrolling
‚úÖ **React Context Integration** - Modern state management for refresh
‚úÖ **Loading States** - Visual feedback during data operations
‚úÖ **Error Handling** - Graceful handling of data loading failures

**Perfect mobile dashboard for event coordination with comprehensive refresh functionality and clear authority structure!** üöÄ 